name: CI

on:
  push:
    branches:
      - master
    tags: '*'
  pull_request:
jobs:
  test:
    name: Julia ${{ matrix.julia-version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        julia-version:
          - '1'
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        R-version:
          - 'release'
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@latest
        with:
          version: ${{ matrix.julia-version }}
      - uses: julia-actions/cache@v2
      - name: Install R
        uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true
          r-version: ${{ matrix.R-version }}
      - name: set R lib path to be found by julia RCall
        if: matrix.os == 'ubuntu-latest'
        run: echo "LD_LIBRARY_PATH=$(R RHOME)/lib:$LD_LIBRARY_PATH" >> $GITHUB_ENV
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v4
        with:
          file: lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
          
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@latest
        with:
          version: '1.7'
      - name: Install dependencies
        run: julia --project=docs/ -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate()'
      - uses: julia-actions/julia-runtest@v1
      - name: Build and deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # If authenticating with GitHub Actions token
        run: julia --project=docs/ --code-coverage=user docs/make.jl
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v1
